---
title: "Incremental construction with `SearchGraph`"
engine: julia
lang: en-US

---


by: Eric S. TÃ©llez

```{julia}
#| output: false

using SimilaritySearch
```

For incremental construction we need a database backend that supports incremental insertions. Currently, there are two backends for this: `DynamicMatrixDatabase` and `VectorDatabase`:

- `DynamicMatrixDatabase`: produces matrix like databases (all objects having the same number of components).
- `VectorDatabase`: A generic conainer of objects, objects can be of any kind.

```{julia}
#| output: false
dim = 8
db = DynamicMatrixDatabase(Float32, dim) # or VectorDatabase(Vector{Float32})
dist = L1Distance()
```

it can use any distance function described in `SimilaritySearch` and `Distances.jl`, and in fact any `SemiMetric` as described in the later package. The index construction is made as follows:

```{julia}
#| output: false
G = SearchGraph(; dist, db)
ctx = SearchGraphContext()
```

instead of `index!` we can use `push_item!` and `append_items!` functions

```{julia}
#| output: false
for _ in 1:10^4
    push_item!(G, ctx, rand(Float32, dim))  # push_item! inserts one item at a time
end
```

we can also use `append_items!` if we have a batch of items
```{julia}
#| output: false
append_items!(G, ctx, MatrixDatabase(rand(Float32, dim, 10^4))) # append_items! inserts many items at once
```

Note that we used a `MatrixDatabase` to wrap the matrix to be inserted since it will be
copied into the index. Now we have a populated index.

```{julia}
@assert length(G) == 20_000
```

this will display a lot of information in the console, since as construction advances the hyperparameters of the index are adjusted. 

Once the index is created, the index can solve nearest neighbor queries
```{julia}

Q = MatrixDatabase(rand(dim, 30)) # <1>
k = 5 # <2>
I, D = searchbatch(G, ctx, Q, k)  # <3>
display((typeof(I), typeof(D)))
display((size(I), size(D)))
```
1. Creates the query
2. The number of nearest neighbors to retrieve
3. Solve queries, returns neighbor identifiers and distances.

## Environment and dependencies
```{julia}
#| echo: false
versioninfo()

using Pkg
Pkg.status() 
```
